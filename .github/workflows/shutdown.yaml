name: Shutdown Droplet (Snapshot & Destroy)

on:
  workflow_dispatch:

env:
  working_directory: ./terraform
  snapshot_name: bbs-snapshot-latest

jobs:
  shutdown:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup environment variables
        run: |
          echo "DIGITALOCEAN_ACCESS_TOKEN=${{ secrets.DIGITAL_OCEAN_PAT }}" >> $GITHUB_ENV
          echo "TF_VAR_do_token=${{ secrets.DIGITAL_OCEAN_PAT }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.DIGITAL_OCEAN_SPACES_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.DIGITAL_OCEAN_SPACES_SECRET_KEY }}" >> $GITHUB_ENV

      # - name: Install doctl
      #   run: |
      #     sudo snap install doctl
      #     doctl auth init -t $DIGITALOCEAN_ACCESS_TOKEN

      # - name: Get Droplet ID
      #   id: get_droplet
      #   run: |
      #     DROPLET_ID=$(doctl compute droplet list --format ID,Name --no-header | grep "${{ vars.droplet_name }}" | awk '{print $1}')
      #     if [ -z "$DROPLET_ID" ]; then
      #       echo "Droplet '${{ vars.droplet_name }}' not found. Exiting workflow."
      #       exit 0
      #     fi
      #     echo "DROPLET_ID=$DROPLET_ID" >> $GITHUB_ENV

      # - name: Take Snapshot
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     SNAPSHOT_NAME=${{ env.snapshot_name }}

      #     # Delete any existing snapshot with the same name
      #     EXISTING_SNAPSHOT_ID=$(doctl compute snapshot list --resource droplet --format ID,Name --no-header | grep "$SNAPSHOT_NAME" | awk '{print $1}')
      #     if [ -n "$EXISTING_SNAPSHOT_ID" ]; then
      #       doctl compute snapshot delete "$EXISTING_SNAPSHOT_ID" --force
      #     fi

      #     # Create a new snapshot and wait for it to replicate
      #     doctl compute droplet-action snapshot $DROPLET_ID --snapshot-name $SNAPSHOT_NAME
      #     until doctl compute snapshot list --resource droplet | grep "$SNAPSHOT_NAME"; do
      #       echo "Waiting for snapshot..."; sleep 10;
      #     done

      #     SNAPSHOT_ID=$(doctl compute snapshot list --resource droplet --format ID,Name --no-header | grep "$SNAPSHOT_NAME" | awk '{print $1}')
      #     echo "Snapshot has been created with ID $SNAPSHOT_ID"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ${{ env.working_directory }}
        run: terraform init

      - name: Terraform Destroy Plan
        working-directory: ${{ env.working_directory }}
        run: terraform plan -destroy -target=digitalocean_droplet.droplet_bbs_game_server -out=destroy.tfplan

      # - name: Terraform Destroy
      #   if: github.ref == 'refs/heads/main'
      #   working-directory: ${{ env.working_directory }}
      #   run: terraform apply -auto-approve destroy.tfplan
